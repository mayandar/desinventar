//PACKAGE NAME
package org.lared.desinventar.webobject;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.math.*;
import java.text.*;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.*;


//CLASS NAME
// generated by WebObjectGenerator...
public class UserSubpermissions extends webObject
{
//    public int dbType=Sys.iDatabaseType;	

	// DATA MEMBERS OF THE CLASS. THEY ARE EXACT MAPPING OF DB. RECORD.
	public 	String userid;
	public 	String country;
	public 	int    region_level;
	public 	String region_code;

	/**
	* creates a hash table with field values of the data members
	*
	*/

	public void updateHashTable() {
		// FIELD NAMES VECTOR
		asFieldNames.put("userid", userid);
		asFieldNames.put("country", country);
		asFieldNames.put("region_level", String.valueOf(region_level));
		asFieldNames.put("region_code", region_code);

	}

	/**
	* update data members with values stored in hash table
	*
	*/

	public void updateMembersFromHashTable() {
		// REVERSE FIELD NAMES VECTOR
		setUserid((String)asFieldNames.get("userid"));
		setCountry((String)asFieldNames.get("country"));
		setRegion_level((String)asFieldNames.get("region_level"));
		setRegion_code((String)asFieldNames.get("region_code"));

	}
	/**
	* constructor of the class. it initialises the object variables
	*
	*/

	// CONSTRUCTOR
	public void init() {
		lastError="No errors detected";
		userid = "";
		country = "";
		region_level = 0;
		region_code = "";
		updateHashTable();
	}

	public UserSubpermissions() {
		super("UserSubpermissions object");
		init();
	}
//--------------------------------------------------------------------------------
// getter and setter methods of the elements of the class
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'userid'
	public String getUserid() {
		return userid;
	}

	public void setUserid(String sParameter) {
		userid = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'country'
	public String getCountry() {
		return country;
	}

	public void setCountry(String sParameter) {
		country = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'region_level'
	public String getRegion_level() {
		return Integer.toString(region_level);
	}

	public void setRegion_level(String sParameter) {
		region_level = extendedParseInt(sParameter);
	}

	public void setRegion_level(int sParameter) {
		region_level = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'region_code'
	public String getRegion_code() {
		return region_code;
	}

	public void setRegion_code(String sParameter) {
		region_code = sParameter;
	}
//--------------------------------------------------------------------------------


	//----------------------------------------------------------------
	// Operational methods any webObject must have. Abstract class
	// provides templates and default behaviour (return error)
	//----------------------------------------------------------------

	/**
	* retrieves object info from HTML form fields
	*
	*/
	public int getForm(HttpServletRequest req, HttpServletResponse resp, Connection con) {

		// GET_FORM()
		setUserid(not_null(req.getParameter(assignName("userid"))));
		setCountry(not_null(req.getParameter(assignName("country"))));
		setRegion_level(req.getParameter(assignName("region_level")));
		setRegion_code(not_null(req.getParameter(assignName("region_code"))));

		updateHashTable();
		return 0;
	}

	/**
	* retrieves object info from HTML form fields
	*
	*/
	public int getForm(ServletRequest req, ServletResponse resp, Connection con) {

		// GET_FORM()
		setUserid(not_null(req.getParameter(assignName("userid"))));
		setCountry(not_null(req.getParameter(assignName("country"))));
		setRegion_level(req.getParameter(assignName("region_level")));
		setRegion_code(not_null(req.getParameter(assignName("region_code"))));

		updateHashTable();
		return 0;
	}


	/**
	* loads an object from a record read from database
	*
	*/
	public void loadWebObject(ResultSet rset) {
		try {
			// SQL_LOAD

			try {
				userid = not_null(rset.getString("userid"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field userid -->";
				System.out.println(ex.toString());
			}

			try {
				country = not_null(rset.getString("country"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field country -->";
				System.out.println(ex.toString());
			}

			try {
				region_level = rset.getInt("region_level");

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field region_level -->";
				System.out.println(ex.toString());
			}

			try {
				region_code = not_null(rset.getString("region_code"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field region_code -->";
				System.out.println(ex.toString());
			}

		} catch (Exception e) {
			lastError = "<!-- Error loading WebObject: " + e.toString() + " : " + sSql + " -->";
		}
		updateHashTable();
	}

	/**
	* reads an object from the database
	*
	*/
	public int getWebObject(Connection con) 
	{
		int nrows = 0;
		try {		
			// SQL_GET
			int f=1;
			sSql = "SELECT * FROM user_subpermissions";
			sSql += " WHERE (userid = ?) AND (country = ?) AND (region_level = ?) AND (region_code = ?)";
			pstmt = con.prepareStatement(sSql);


			if (userid==null || userid.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, userid);

			if (country==null || country.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, country);
				pstmt.setInt(f++, region_level);

			if (region_code==null || region_code.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, region_code);			rset = pstmt.executeQuery();
			if (rset.next()) {
				loadWebObject(rset);
				nrows = 1;				
			}			
			// releases the statement object
			rset.close();
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error getting webObject: " + ex.toString() + " : " + sSql	+ " -->";
			nrows = -1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}

		return nrows;
	}



	/**
	* checks the lengths of strings are <= to what is defined in the database
	*
	*/
	public void checkLengths()
    {
		// CHECK_LENGTHS
		if (userid.length()>30)
			userid=userid.substring(0,30);
		if (country.length()>30)
			country=country.substring(0,30);
		if (region_code.length()>30)
			region_code=region_code.substring(0,30);
    }

	/**
	* adds a new object to the database
	*
	*/
	public int addWebObject(Connection con)
    {
		int nrows = 0;
		try {
			// SQL_INSERT
			int f=1;
			sSql = "insert into user_subpermissions (";
			sSql += "userid, country, region_level, region_code)";
			sSql += "VALUES (?, ?, ?, ?)";
			pstmt = con.prepareStatement(sSql);

			if (userid==null || userid.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, userid);
			if (country==null || country.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, country);
			
			pstmt.setInt(f++, region_level);
			if (region_code==null || region_code.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, region_code);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			System.out.println("ERROR (adding web object): "+ex.toString());
			lastError = "<!-- Error adding webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}

  	/**
  	* updates an existing object in the database
  	*
  	*/
  	public int updateWebObject(Connection con)
    {
		int nrows = 0;
		try {
			// SQL_UPDATE
			int f=1;
			sSql = "UPDATE user_subpermissions SET ";
			sSql += " WHERE (userid = ?) AND (country = ?) AND (region_level = ?) AND (region_code = ?)";
			pstmt = con.prepareStatement(sSql);




			if (userid==null || userid.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, userid);

			if (country==null || country.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, country);
				pstmt.setInt(f++, region_level);

			if (region_code==null || region_code.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, region_code);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error updating webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}

	/**
	* deletes an existing object in the database
	*
	*/
	public int deleteWebObject(Connection con) 
	{
		int nrows = 0;
		try {
			// SQL_DELETE
			int f=1;
			sSql = "DELETE FROM user_subpermissions";
			sSql += " WHERE (userid = ?) AND (country = ?) AND (region_level = ?) AND (region_code = ?)";
			pstmt = con.prepareStatement(sSql);


			if (userid==null || userid.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, userid);

			if (country==null || country.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, country);
				pstmt.setInt(f++, region_level);

			if (region_code==null || region_code.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, region_code);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error deleting webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}
}

/*    HTML TEMPLATE
<table border=0 cellspacing=0 cellpadding=0>
<tr><td>userid:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='userid' VALUE="<%=beanName.userid%>"></td></tr>
<tr><td>country:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='country' VALUE="<%=beanName.country%>"></td></tr>
<tr><td>region_level:</td><td>  <INPUT type='TEXT' size='5' maxlength='11' name='region_level' VALUE="<%=beanName.region_level%>"></td></tr>
<tr><td>region_code:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='region_code' VALUE="<%=beanName.region_code%>"></td></tr>
</table>
END HTML TEMPLATE */
