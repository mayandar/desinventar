//PACKAGE NAME
package org.lared.desinventar.webobject;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.math.*;
import java.text.*;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.*;

import org.lared.desinventar.util.*;
import org.lared.desinventar.system.*;
import org.lared.desinventar.webobject.*;


//CLASS NAME
// generated by persistentObjectGenerator...
public class lev2 extends webObject
{
   // DATA MEMBERS OF THE CLASS. THEY ARE EXACT MAPPING OF DB. RECORD.
     public   String lev2_cod;
     public   String lev2_name;
     public   String lev2_name_en;
     public   String lev2_lev1;

	//--------------------------------------------------------------------------------
	// creates a hash table with field values of the data members
	//--------------------------------------------------------------------------------

  public void updateHashTable()
  {
		// FIELD NAMES VECTOR
		asFieldNames.put("lev2_cod", lev2_cod);
		asFieldNames.put("lev2_name", lev2_name);
		asFieldNames.put("lev2_name_en", lev2_name_en);
		asFieldNames.put("lev2_lev1", lev2_lev1);

	}

	//--------------------------------------------------------------------------------
	// update data members with values stored in hash table
	//--------------------------------------------------------------------------------

	public void updateMembersFromHashTable() {
		// REVERSE FIELD NAMES VECTOR
		setLev2_cod((String)asFieldNames.get("lev2_cod"));
		setLev2_name((String)asFieldNames.get("lev2_name"));
		setLev2_name_en((String)asFieldNames.get("lev2_name_en"));
		setLev2_lev1((String)asFieldNames.get("lev2_lev1"));

	}
	//--------------------------------------------------------------------------------
	// constructor of the class. it initializes the object variables
	//--------------------------------------------------------------------------------

	// CONSTRUCTOR
	public void init() {
		lastError="No errors detected";
		lev2_cod = "";
		lev2_name = "";
		lev2_name_en = "";
		lev2_lev1 = "";
		updateHashTable();
	}

	
//--------------------------------------------------------------------------------
//getter and setter methods of the elements of the class
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//Access methods for database field 'lev2_cod'
	public String getLev2_cod() {
		return lev2_cod;
	}

	public void setLev2_cod(String sParameter) {
		lev2_cod = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//Access methods for database field 'lev2_name'
	public String getLev2_name() {
		return lev2_name;
	}

	public void setLev2_name(String sParameter) {
		lev2_name = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//Access methods for database field 'lev2_name_en'
	public String getLev2_name_en() {
		return lev2_name_en;
	}

	public void setLev2_name_en(String sParameter) {
		lev2_name_en = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
//Access methods for database field 'lev2_lev1'
	public String getLev2_lev1() {
		return lev2_lev1;
	}

	public void setLev2_lev1(String sParameter) {
		lev2_lev1 = sParameter;
	}
//--------------------------------------------------------------------------------




	//----------------------------------------------------------------
	// Operational methods any webObject must have. Abstract class
	// provides templates and default behaviour (return error)
	//----------------------------------------------------------------

	//--------------------------------------------------------------------------------
	// retrieves object info from HTML form fields
	//--------------------------------------------------------------------------------
	public int getForm(HttpServletRequest req, HttpServletResponse resp, Connection con) {

		// GET_FORM()
		lev2_cod = not_null(req.getParameter(assignName("lev2_cod")));
		lev2_name = not_null(req.getParameter(assignName("lev2_name")));
		lev2_name_en = not_null(req.getParameter(assignName("lev2_name_en")));
		lev2_lev1 = not_null(req.getParameter(assignName("lev2_lev1")));

		updateHashTable();
		return 0;
	}

	/**
	* checks the lengths of strings are <= to what is defined in the database
	*
	*/
	public void checkLengths()
	{
		// CHECK_LENGTHS
		if (lev2_cod.length()>15)
			lev2_cod=lev2_cod.substring(0,15);
		if (lev2_name.length()>30)
			lev2_name=lev2_name.substring(0,30);
		if (lev2_name_en.length()>30)
			lev2_name_en=lev2_name_en.substring(0,30);
		if (lev2_lev1.length()>15)
			lev2_lev1=lev2_lev1.substring(0,15);
	}


	//--------------------------------------------------------------------------------
	// loads an object from a record read from database
	//--------------------------------------------------------------------------------
  public void loadWebObject(ResultSet rset)
    {
		try {
			// SQL_LOAD

			try {
				lev2_cod = not_null(rset.getString("lev2_cod"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev2_cod -->";
				System.out.println(ex.toString());
			}

			try {
				lev2_name = not_null(rset.getString("lev2_name"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev2_name -->";
				System.out.println(ex.toString());
			}

			try {
				lev2_name_en = not_null(rset.getString("lev2_name_en"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev2_name_en -->";
				System.out.println(ex.toString());
			}

			try {
				lev2_lev1 = not_null(rset.getString("lev2_lev1"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev2_lev1 -->";
				System.out.println(ex.toString());
			}

		} catch (Exception e) {
			lastError = "<!-- Error loading WebObject: " + e.toString() + " : " + sSql + " -->";
		}
		updateHashTable();
	}

	//--------------------------------------------------------------------------------
	// reads an object from the database
	//--------------------------------------------------------------------------------
  public int getWebObject(Connection con)
    {
		try {		
			// SQL_GET
			int f=1;
			sSql = "SELECT lev2_cod,lev2_name,lev2_name_en,lev2_lev1 FROM lev2";
			sSql += " WHERE (lev2_cod = ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev2_cod == null || lev2_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_cod);			rset = pstmt.executeQuery();
			int nrows = 1;
			if (rset.next())
				loadWebObject(rset);
			else
				nrows = 0;
			// releases the statement object
			rset.close();
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			lastError = "<!-- Error getting webObject: " + ex.toString() + " : " + sSql
					+ " -->";
		}

		return -1;
	}

	//--------------------------------------------------------------------------------
	// adds a new object to the database
	//--------------------------------------------------------------------------------
  public int addWebObject(Connection con)
    {
		try {
			checkLengths();
			// SQL_INSERT
			int f=1;
			sSql = "insert into lev2 (";
			sSql += "lev2_cod, lev2_name, lev2_name_en, lev2_lev1)";
			sSql += "VALUES (?, ?, ?, ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev2_cod == null || lev2_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_cod);

			if (lev2_name == null || lev2_name.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_name);

			if (lev2_name_en == null || lev2_name_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_name_en);

			if (lev2_lev1 == null || lev2_lev1.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_lev1);


			int nrows = pstmt.executeUpdate();
			
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			System.out.println("[DI9] ERROR (adding web object LEV2): "+ex.toString());
			lastError = "<!-- Error adding webObject: " + ex.toString() + " : " + sSql + " -->";
			return -1;
		}
	}

	//--------------------------------------------------------------------------------
	// updates an existing object in the database
	//--------------------------------------------------------------------------------
  public int updateWebObject(Connection con)
    {
		try {
			checkLengths();
			// SQL_UPDATE
			int f=1;
			sSql = "UPDATE lev2 SET ";
			sSql += "lev2_name = ?";
			sSql += ", lev2_name_en = ?";
			sSql += ", lev2_lev1 = ?";
			sSql += " WHERE (lev2_cod = ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev2_name == null || lev2_name.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_name);

			if (lev2_name_en == null || lev2_name_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_name_en);

			if (lev2_lev1 == null || lev2_lev1.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_lev1);



			if (lev2_cod == null || lev2_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_cod);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			lastError = "<!-- Error updating webObject: " + ex.toString() + " : " + sSql + " -->";
		}

		return -1;
	}

	//-------------------------------------------------------------------------------
	// deletes an existing object in the database
	//--------------------------------------------------------------------------------
	public int deleteWebObject(Connection con) {

		try {
			// SQL_DELETE
			int f=1;
			sSql = "DELETE FROM lev2";
			sSql += " WHERE (lev2_cod = ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev2_cod == null || lev2_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev2_cod);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			lastError = "<!-- Error deleting webObject: " + ex.toString() + " : " + sSql + " -->";
		}
		return -1;
	}
}

/*    HTML TEMPLATE
<table border=0 cellspacing=0 cellpadding=0>
<tr><td>lev2_cod:</td><td>  <INPUT type='TEXT' size='16' maxlength='15' name='lev2_cod' VALUE="<%=beanName.lev2_cod%>"></td></tr>
<tr><td>lev2_name:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='lev2_name' VALUE="<%=beanName.lev2_name%>"></td></tr>
<tr><td>lev2_name_en:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='lev2_name_en' VALUE="<%=beanName.lev2_name_en%>"></td></tr>
<tr><td>lev2_lev1:</td><td>  <INPUT type='TEXT' size='16' maxlength='15' name='lev2_lev1' VALUE="<%=beanName.lev2_lev1%>"></td></tr>
</table>
END HTML TEMPLATE */
