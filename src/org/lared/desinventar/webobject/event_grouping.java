//PACKAGE NAME
package org.lared.desinventar.webobject;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.math.*;
import java.text.*;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.*;


//CLASS NAME
// generated by WebObjectGenerator...
public class event_grouping extends webObject
{
//    public int dbType=Sys.iDatabaseType;	

	// DATA MEMBERS OF THE CLASS. THEY ARE EXACT MAPPING OF DB. RECORD.
	public 	String nombre;
	public 	int    lec_grouping_days;
	public 	String category;

	/**
	* creates a hash table with field values of the data members
	*
	*/

	public void updateHashTable() {
		// FIELD NAMES VECTOR
		asFieldNames.put("nombre", nombre);
		asFieldNames.put("lec_grouping_days", String.valueOf(lec_grouping_days));
		asFieldNames.put("category", category);

	}

	/**
	* update data members with values stored in hash table
	*
	*/

	public void updateMembersFromHashTable() {
		// REVERSE FIELD NAMES VECTOR
		setNombre((String)asFieldNames.get("nombre"));
		setLec_grouping_days((String)asFieldNames.get("lec_grouping_days"));
		setCategory((String)asFieldNames.get("category"));

	}
	/**
	* constructor of the class. it initialises the object variables
	*
	*/

	// CONSTRUCTOR
	public void init() {
		lastError="No errors detected";
		nombre = "";
		lec_grouping_days = 0;
		category = "";
		updateHashTable();
	}

	public event_grouping() {
		super("event_grouping object");
		init();
	}
//--------------------------------------------------------------------------------
// getter and setter methods of the elements of the class
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'nombre'
	public String getNombre() {
		return nombre;
	}

	public void setNombre(String sParameter) {
		nombre = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'lec_grouping_days'
	public String getLec_grouping_days() {
		return Integer.toString(lec_grouping_days);
	}

	public void setLec_grouping_days(String sParameter) {
		lec_grouping_days = extendedParseInt(sParameter);
	}

	public void setLec_grouping_days(int sParameter) {
		lec_grouping_days = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'category'
	public String getCategory() {
		return category;
	}

	public void setCategory(String sParameter) {
		category = sParameter;
	}
//--------------------------------------------------------------------------------


	//----------------------------------------------------------------
	// Operational methods any webObject must have. Abstract class
	// provides templates and default behaviour (return error)
	//----------------------------------------------------------------

	/**
	* retrieves object info from HTML form fields
	*
	*/
	public int getForm(HttpServletRequest req, HttpServletResponse resp, Connection con) {

		// GET_FORM()
		setNombre(not_null(req.getParameter(assignName("nombre"))));
		setLec_grouping_days(req.getParameter(assignName("lec_grouping_days")));
		setCategory(not_null(req.getParameter(assignName("category"))));

		updateHashTable();
		return 0;
	}

	/**
	* retrieves object info from HTML form fields
	*
	*/
	public int getForm(ServletRequest req, ServletResponse resp, Connection con) {

		// GET_FORM()
		setNombre(not_null(req.getParameter(assignName("nombre"))));
		setLec_grouping_days(req.getParameter(assignName("lec_grouping_days")));
		setCategory(not_null(req.getParameter(assignName("category"))));

		updateHashTable();
		return 0;
	}


	/**
	* loads an object from a record read from database
	*
	*/
	public void loadWebObject(ResultSet rset) {
		try {
			// SQL_LOAD

			try {
				nombre = not_null(rset.getString("nombre"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field nombre -->";
				System.out.println(ex.toString());
			}

			try {
				lec_grouping_days = rset.getInt("lec_grouping_days");

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lec_grouping_days -->";
				System.out.println(ex.toString());
			}

			try {
				category = not_null(rset.getString("category"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field category -->";
				System.out.println(ex.toString());
			}

		} catch (Exception e) {
			lastError = "<!-- Error loading WebObject: " + e.toString() + " : " + sSql + " -->";
		}
		updateHashTable();
	}

	/**
	* reads an object from the database
	*
	*/
	public int getWebObject(Connection con) 
	{
		int nrows = 0;
		try {		
			// SQL_GET
			int f=1;
			sSql = "SELECT * FROM event_grouping";
			sSql += " WHERE (nombre = ?)";
			pstmt = con.prepareStatement(sSql);


			if (nombre==null || nombre.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, nombre);			rset = pstmt.executeQuery();
			if (rset.next()) {
				loadWebObject(rset);
				nrows = 1;				
			}			
			// releases the statement object
			rset.close();
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error getting webObject: " + ex.toString() + " : " + sSql	+ " -->";
			nrows = -1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}

		return nrows;
	}



	/**
	* checks the lengths of strings are <= to what is defined in the database
	*
	*/
	public void checkLengths()
    {
		// CHECK_LENGTHS
		if (nombre.length()>30)
			nombre=nombre.substring(0,30);
		if (category.length()>30)
			category=category.substring(0,30);
    }

	/**
	* adds a new object to the database
	*
	*/
	public int addWebObject(Connection con)
    {
		int nrows = 0;
		try {
			// SQL_INSERT
			int f=1;
			sSql = "insert into event_grouping (";
			sSql += "nombre, lec_grouping_days, category)";
			sSql += "VALUES (?, ?, ?)";
			pstmt = con.prepareStatement(sSql);

			if (nombre==null || nombre.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, nombre);
			pstmt.setInt(f++, lec_grouping_days);
			if (category==null || category.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, category);

			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			System.out.println("ERROR (adding web object): "+ex.toString());
			lastError = "<!-- Error adding webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}

  	/**
  	* updates an existing object in the database
  	*
  	*/
  	public int updateWebObject(Connection con)
    {
		int nrows = 0;
		try {
			// SQL_UPDATE
			int f=1;
			sSql = "UPDATE event_grouping SET ";
			sSql += "lec_grouping_days = ?";
			sSql += ", category = ?";
			sSql += " WHERE (nombre = ?)";
			pstmt = con.prepareStatement(sSql);

			pstmt.setInt(f++, lec_grouping_days);

			if (category==null || category.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else 
				pstmt.setString(f++, category);

			if (nombre==null || nombre.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, nombre);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error updating webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}

	/**
	* deletes an existing object in the database
	*
	*/
	public int deleteWebObject(Connection con) 
	{
		int nrows = 0;
		try {
			// SQL_DELETE
			int f=1;
			sSql = "DELETE FROM event_grouping";
			sSql += " WHERE (nombre = ?)";
			pstmt = con.prepareStatement(sSql);

			if (nombre==null || nombre.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, nombre);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error deleting webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}
}

/*    HTML TEMPLATE
<table border=0 cellspacing=0 cellpadding=0>
<tr><td>nombre:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='nombre' VALUE="<%=beanName.nombre%>"></td></tr>
<tr><td>lec_grouping_days:</td><td>  <INPUT type='TEXT' size='5' maxlength='6' name='lec_grouping_days' VALUE="<%=beanName.lec_grouping_days%>"></td></tr>
<tr><td>category:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='category' VALUE="<%=beanName.category%>"></td></tr>
</table>
END HTML TEMPLATE */
