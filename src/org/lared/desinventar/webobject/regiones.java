//PACKAGE NAME
package org.lared.desinventar.webobject;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.math.*;
import java.text.*;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.*;

import org.lared.desinventar.util.*;
import org.lared.desinventar.system.*;
import org.lared.desinventar.webobject.*;


//CLASS NAME
// generated by persistentObjectGenerator...

// CUSTOMIZED:   xmin and xmax fields for Postgres!!!

public class regiones extends webObject
{
    
	// DATA MEMBERS OF THE CLASS. THEY ARE EXACT MAPPING OF DB. RECORD.
     public   String codregion;
     public   String nombre;
     public   String nombre_en;
     public   double   x;
     public   double   y;
     public   double   angulo;
     public   double   xmin;
     public   double   ymin;
     public   double   xmax;
     public   double   ymax;
     public   double   xtext;
     public   double   ytext;
     public   int      nivel;
     public   int      ap_lista;
     public   String lev0_cod;

	//--------------------------------------------------------------------------------
	// creates a hash table with field values of the data members
	//--------------------------------------------------------------------------------

  public void updateHashTable()
  {
		// FIELD NAMES VECTOR
		asFieldNames.put("codregion", codregion);
		asFieldNames.put("nombre", nombre);
		asFieldNames.put("nombre_en", nombre_en);
		asFieldNames.put("x", String.valueOf(x));
		asFieldNames.put("y", String.valueOf(y));
		asFieldNames.put("angulo", String.valueOf(angulo));
		asFieldNames.put("xmin", String.valueOf(xmin));
		asFieldNames.put("ymin", String.valueOf(ymin));
		asFieldNames.put("xmax", String.valueOf(xmax));
		asFieldNames.put("ymax", String.valueOf(ymax));
		asFieldNames.put("xtext", String.valueOf(xtext));
		asFieldNames.put("ytext", String.valueOf(ytext));
		asFieldNames.put("nivel", String.valueOf(nivel));
		asFieldNames.put("ap_lista", String.valueOf(ap_lista));
		asFieldNames.put("lev0_cod", lev0_cod);

	}

	//--------------------------------------------------------------------------------
	// update data members with values stored in hash table
	//--------------------------------------------------------------------------------

	public void updateMembersFromHashTable() {
		// REVERSE FIELD NAMES VECTOR
		setCodregion((String)asFieldNames.get("codregion"));
		setNombre((String)asFieldNames.get("nombre"));
		setNombre_en((String)asFieldNames.get("nombre_en"));
		setX((String)asFieldNames.get("x"));
		setY((String)asFieldNames.get("y"));
		setAngulo((String)asFieldNames.get("angulo"));
		setXmin((String)asFieldNames.get("xmin"));
		setYmin((String)asFieldNames.get("ymin"));
		setXmax((String)asFieldNames.get("xmax"));
		setYmax((String)asFieldNames.get("ymax"));
		setXtext((String)asFieldNames.get("xtext"));
		setYtext((String)asFieldNames.get("ytext"));
		setNivel((String)asFieldNames.get("nivel"));
		setAp_lista((String)asFieldNames.get("ap_lista"));
		setLev0_cod((String)asFieldNames.get("lev0_cod"));

	}

	//--------------------------------------------------------------------------------
	// constructor of the class. it initializes the object variables
	//--------------------------------------------------------------------------------

	// CONSTRUCTOR
	public void init()
	{
		lastError="No errors detected";
		codregion = "";
		nombre = "";
		nombre_en = "";
		x = 0;
		y = 0;
		angulo = 0;
		xmin = 0;
		ymin = 0;
		xmax = 0;
		ymax = 0;
		xtext = 0;
		ytext = 0;
		nivel = 0;
		ap_lista = 0;
		lev0_cod = "";
		updateHashTable();
	}

	public regiones()
	{
		super("regiones object");
		init();
	}
//--------------------------------------------------------------------------------
// getter and setter methods of the elements of the class
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// METHODS FOR: codregion
	public String getCodregion()
	{
		return codregion;
	}

	public void setCodregion(String sParameter)
	{
		codregion = sParameter;
	}
// end of methods for Codregion
//--------------------------------------------------------------------------------
// METHODS FOR: nombre
	public String getNombre()
	{
		return nombre;
	}

	public void setNombre(String sParameter)
	{
		nombre = sParameter;
	}
// end of methods for Nombre
//--------------------------------------------------------------------------------
// METHODS FOR: nombre_en
	public String getNombre_en()
	{
		return nombre_en;
	}

	public void setNombre_en(String sParameter)
	{
		nombre_en = sParameter;
	}
// end of methods for Nombre_en
//--------------------------------------------------------------------------------
// METHODS FOR: x
	public String getX()
	{
		return Double.toString(x);
	}

	public void setX(String sParameter)
	{
		x = extendedParseDouble(sParameter);
	}
// end of methods for X
//--------------------------------------------------------------------------------
// METHODS FOR: y
	public String getY()
	{
		return Double.toString(y);
	}

	public void setY(String sParameter)
	{
		y = extendedParseDouble(sParameter);
	}
// end of methods for Y
//--------------------------------------------------------------------------------
// METHODS FOR: angulo
	public String getAngulo()
	{
		return Double.toString(angulo);
	}

	public void setAngulo(String sParameter)
	{
		angulo = extendedParseDouble(sParameter);
	}
// end of methods for Angulo
//--------------------------------------------------------------------------------
// METHODS FOR: xmin
	public String getXmin()
	{
		return Double.toString(xmin);
	}

	public void setXmin(String sParameter)
	{
		xmin = extendedParseDouble(sParameter);		
	}
// end of methods for Xmin
//--------------------------------------------------------------------------------
// METHODS FOR: ymin
	public String getYmin()
	{
		return Double.toString(ymin);
	}

	public void setYmin(String sParameter)
	{
		ymin = extendedParseDouble(sParameter);
	}
// end of methods for Ymin
//--------------------------------------------------------------------------------
// METHODS FOR: xmax
	public String getXmax()
	{
		return Double.toString(xmax);
	}

	public void setXmax(String sParameter)
	{
		xmax = extendedParseDouble(sParameter);
	}
// end of methods for Xmax
//--------------------------------------------------------------------------------
// METHODS FOR: ymax
	public String getYmax()
	{
		return Double.toString(ymax);
	}

	public void setYmax(String sParameter)
	{
		ymax = extendedParseDouble(sParameter);
	}
// end of methods for Ymax
//--------------------------------------------------------------------------------
// METHODS FOR: xtext
	public String getXtext()
	{
		return Double.toString(xtext);
	}

	public void setXtext(String sParameter)
	{
		xtext = extendedParseDouble(sParameter);
	}
// end of methods for Xtext
//--------------------------------------------------------------------------------
// METHODS FOR: ytext
	public String getYtext()
	{
		return Double.toString(ytext);
	}

	public void setYtext(String sParameter)
	{
		ytext = extendedParseDouble(sParameter);
	}
// end of methods for Ytext
//--------------------------------------------------------------------------------
// METHODS FOR: nivel
	public String getNivel()
	{
		return Integer.toString(nivel);
	}

	public void setNivel(String sParameter)
	{
		nivel = extendedParseInt(sParameter);
	}
// end of methods for Nivel
//--------------------------------------------------------------------------------
// METHODS FOR: ap_lista
	public String getAp_lista()
	{
		return Integer.toString(ap_lista);
	}

	public void setAp_lista(String sParameter)
	{
		ap_lista = extendedParseInt(sParameter);
	}
// end of methods for Ap_lista
//--------------------------------------------------------------------------------
// METHODS FOR: lev0_cod
	public String getLev0_cod()
	{
		return lev0_cod;
	}

	public void setLev0_cod(String sParameter)
	{
		lev0_cod = sParameter;
	}
// end of methods for Lev0_cod

	//----------------------------------------------------------------
	// Operational methods any webObject must have. Abstract class
	// provides templates and default behaviour (return error)
	//----------------------------------------------------------------

	//--------------------------------------------------------------------------------
	// retrieves object info from HTML form fields
	//--------------------------------------------------------------------------------
	public int getForm(HttpServletRequest req, HttpServletResponse resp, Connection con) {

		// GET_FORM()
		codregion = not_null(req.getParameter(assignName("codregion")));
		nombre = not_null(req.getParameter(assignName("nombre")));
		nombre_en = not_null(req.getParameter(assignName("nombre_en")));
		x = extendedParseDouble(req.getParameter(assignName("x")));
		y = extendedParseDouble(req.getParameter(assignName("y")));
		angulo = extendedParseDouble(req.getParameter(assignName("angulo")));
		xmin = extendedParseDouble(req.getParameter(assignName("xmin")));
		ymin = extendedParseDouble(req.getParameter(assignName("ymin")));
		xmax = extendedParseDouble(req.getParameter(assignName("xmax")));
		ymax = extendedParseDouble(req.getParameter(assignName("ymax")));
		xtext = extendedParseDouble(req.getParameter(assignName("xtext")));
		ytext = extendedParseDouble(req.getParameter(assignName("ytext")));
		nivel = extendedParseInt(req.getParameter(assignName("nivel")));
		ap_lista = extendedParseInt(req.getParameter(assignName("ap_lista")));
		lev0_cod = not_null(req.getParameter(assignName("lev0_cod")));

		updateHashTable();
		return 0;
	}

	//--------------------------------------------------------------------------------
	// loads an object from a record read from database
	//--------------------------------------------------------------------------------
  public void loadWebObject(ResultSet rset)
    {
		try {
			// SQL_LOAD

			try {
				codregion = not_null(rset.getString("codregion"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field codregion -->";
				System.out.println(ex.toString());
			}

			try {
				nombre = not_null(rset.getString("nombre"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field nombre -->";
				System.out.println(ex.toString());
			}

			try {
				nombre_en = not_null(rset.getString("nombre_en"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field nombre_en -->";
				// IGNORE THIS: System.out.println(ex.toString());
			}

			try {
				x = rset.getDouble("x");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field x -->";
				System.out.println(ex.toString());
			}

			try {
				y = rset.getDouble("y");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field y -->";
				System.out.println(ex.toString());
			}

			try {
				angulo = rset.getDouble("angulo");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field angulo -->";
				System.out.println(ex.toString());
			}

			try {
				xmin = rset.getDouble(this.sqlXmin());
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field xmin -->";
				System.out.println(ex.toString());
			}

			try {
				ymin = rset.getDouble("ymin");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field ymin -->";
				System.out.println(ex.toString());
			}

			try {
				xmax = rset.getDouble(this.sqlXmax());
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field xmax -->";
				System.out.println(ex.toString());
			}

			try {
				ymax = rset.getDouble("ymax");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field ymax -->";
				System.out.println(ex.toString());
			}

			try {
				xtext = rset.getDouble("xtext");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field xtext -->";
				System.out.println(ex.toString());
			}

			try {
				ytext = rset.getDouble("ytext");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field ytext -->";
				System.out.println(ex.toString());
			}

			try {
				nivel = rset.getInt("nivel");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field nivel -->";
				System.out.println(ex.toString());
			}

			try {
				ap_lista = rset.getInt("ap_lista");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field ap_lista -->";
				System.out.println(ex.toString());
			}

			try {
				lev0_cod = not_null(rset.getString("lev0_cod"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev0_cod -->";
				System.out.println(ex.toString());
			}

		} catch (Exception e) {
			lastError = "<!-- Error loading WebObject: " + e.toString() + " : " + sSql + " -->";
		}
		updateHashTable();
	}

	//--------------------------------------------------------------------------------
	// reads an object from the database
	//--------------------------------------------------------------------------------
  public int getWebObject(Connection con)
    {
		try {		
			// SQL_GET
			int f=1;
			sSql = "SELECT codregion,nombre,nombre_en,x,y,angulo,"+this.sqlXmin()+",ymin,"+this.sqlXmax()+",ymax,xtext,ytext,nivel,ap_lista,lev0_cod FROM regiones";
			sSql += " WHERE (codregion = ?)";
			pstmt = con.prepareStatement(sSql);


			if (codregion == null || codregion.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, codregion);			rset = pstmt.executeQuery();
			int nrows = 1;
			if (rset.next())
				loadWebObject(rset);
			else
				nrows = 0;
			// releases the statement object
			rset.close();
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			lastError = "<!-- Error getting webObject: " + ex.toString() + " : " + sSql
					+ " -->";
		}

		return -1;
	}

	//--------------------------------------------------------------------------------
	// adds a new object to the database
	//--------------------------------------------------------------------------------
  public int addWebObject(Connection con)
    {
		try {
			// SQL_INSERT
			int f=1;
			sSql = "insert into regiones (";
			sSql += "codregion, nombre, nombre_en, x, y, angulo, "+this.sqlXmin()+",ymin,"+this.sqlXmax();
			sSql += ", ymax, xtext, ytext, nivel, ap_lista, lev0_cod)";
			sSql += "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
			pstmt = con.prepareStatement(sSql);


			if (codregion == null || codregion.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, codregion);

			if (nombre == null || nombre.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, nombre);

			if (nombre_en == null || nombre_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, nombre_en);
			pstmt.setDouble(f++, x);
			pstmt.setDouble(f++, y);
			pstmt.setDouble(f++, angulo);
			pstmt.setDouble(f++, xmin);
			pstmt.setDouble(f++, ymin);
			pstmt.setDouble(f++, xmax);
			pstmt.setDouble(f++, ymax);
			pstmt.setDouble(f++, xtext);
			pstmt.setDouble(f++, ytext);
			pstmt.setInt(f++, nivel);
			pstmt.setInt(f++, ap_lista);

			if (lev0_cod == null || lev0_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev0_cod);


			int nrows = pstmt.executeUpdate();
			
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			System.out.println("ERROR (adding web object): "+ex.toString());
			lastError = "<!-- Error adding webObject: " + ex.toString() + " : " + sSql + " -->";
			return -1;
		}
	}

	//--------------------------------------------------------------------------------
	// updates an existing object in the database
	//--------------------------------------------------------------------------------
  public int updateWebObject(Connection con)
    {
		try {
			// SQL_UPDATE
			int f=1;
			sSql = "UPDATE regiones SET ";
			sSql += "nombre = ?";
			sSql += ", nombre_en = ?";
			sSql += ", x = ?";
			sSql += ", y = ?";
			sSql += ", angulo = ?";
			sSql += ", xmin = ?";
			sSql += ", "+this.sqlXmin()+" = ?";
			sSql += ", "+this.sqlXmax()+" = ?";
			sSql += ", ymax = ?";
			sSql += ", xtext = ?";
			sSql += ", ytext = ?";
			sSql += ", nivel = ?";
			sSql += ", ap_lista = ?";
			sSql += ", lev0_cod = ?";
			sSql += " WHERE (codregion = ?)";
			pstmt = con.prepareStatement(sSql);


			if (nombre == null || nombre.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, nombre);

			if (nombre_en == null || nombre_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, nombre_en);
			pstmt.setDouble(f++, x);
			pstmt.setDouble(f++, y);
			pstmt.setDouble(f++, angulo);
			pstmt.setDouble(f++, xmin);
			pstmt.setDouble(f++, ymin);
			pstmt.setDouble(f++, xmax);
			pstmt.setDouble(f++, ymax);
			pstmt.setDouble(f++, xtext);
			pstmt.setDouble(f++, ytext);
			pstmt.setInt(f++, nivel);
			pstmt.setInt(f++, ap_lista);

			if (lev0_cod == null || lev0_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev0_cod);



			if (codregion == null || codregion.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, codregion);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			lastError = "<!-- Error updating webObject: " + ex.toString() + " : " + sSql + " -->";
		}

		return -1;
	}

	//-------------------------------------------------------------------------------
	// deletes an existing object in the database
	//--------------------------------------------------------------------------------
	public int deleteWebObject(Connection con) {

		try {
			// SQL_DELETE
			int f=1;
			sSql = "DELETE FROM regiones";
			sSql += " WHERE (codregion = ?)";
			pstmt = con.prepareStatement(sSql);


			if (codregion == null || codregion.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, codregion);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			lastError = "<!-- Error deleting webObject: " + ex.toString() + " : " + sSql + " -->";
		}
		return -1;
	}
}

/*    HTML TEMPLATE
<table border=0 cellspacing=0 cellpadding=0>
<tr><td>codregion:</td><td>  <INPUT type='TEXT' size='16' maxlength='15' name='codregion' VALUE="<%=beanName.codregion%>"></td></tr>
<tr><td>nombre:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='nombre' VALUE="<%=beanName.nombre%>"></td></tr>
<tr><td>nombre_en:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='nombre_en' VALUE="<%=beanName.nombre_en%>"></td></tr>
<tr><td>x:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='x' VALUE="<%=beanName.x%>"></td></tr>
<tr><td>y:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='y' VALUE="<%=beanName.y%>"></td></tr>
<tr><td>angulo:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='angulo' VALUE="<%=beanName.angulo%>"></td></tr>
<tr><td>xmin:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='xmin' VALUE="<%=beanName.xmin%>"></td></tr>
<tr><td>ymin:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='ymin' VALUE="<%=beanName.ymin%>"></td></tr>
<tr><td>xmax:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='xmax' VALUE="<%=beanName.xmax%>"></td></tr>
<tr><td>ymax:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='ymax' VALUE="<%=beanName.ymax%>"></td></tr>
<tr><td>xtext:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='xtext' VALUE="<%=beanName.xtext%>"></td></tr>
<tr><td>ytext:</td><td>  <INPUT type='TEXT' size='15' maxlength='22' name='ytext' VALUE="<%=beanName.ytext%>"></td></tr>
<tr><td>nivel:</td><td>  <INPUT type='TEXT' size='5' maxlength='11' name='nivel' VALUE="<%=beanName.nivel%>"></td></tr>
<tr><td>ap_lista:</td><td>  <INPUT type='TEXT' size='5' maxlength='11' name='ap_lista' VALUE="<%=beanName.ap_lista%>"></td></tr>
<tr><td>lev0_cod:</td><td>  <INPUT type='TEXT' size='16' maxlength='15' name='lev0_cod' VALUE="<%=beanName.lev0_cod%>"></td></tr>
</table>
END HTML TEMPLATE */
