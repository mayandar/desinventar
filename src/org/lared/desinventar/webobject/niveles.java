//PACKAGE NAME
package org.lared.desinventar.webobject;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.math.*;
import java.text.*;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.*;

import org.lared.desinventar.util.*;
import org.lared.desinventar.system.*;
import org.lared.desinventar.webobject.*;


//CLASS NAME
// generated by persistentObjectGenerator...
public class niveles extends webObject
{
   // DATA MEMBERS OF THE CLASS. THEY ARE EXACT MAPPING OF DB. RECORD.
     public   int      nivel;
     public   String descripcion;
     public   String descripcion_en;
     public   int      longitud;

	//--------------------------------------------------------------------------------
	// creates a hash table with field values of the data members
	//--------------------------------------------------------------------------------

  public void updateHashTable()
  {
		// FIELD NAMES VECTOR
		asFieldNames.put("nivel", String.valueOf(nivel));
		asFieldNames.put("descripcion", descripcion);
		asFieldNames.put("descripcion_en", descripcion_en);
		asFieldNames.put("longitud", String.valueOf(longitud));

	}

	//--------------------------------------------------------------------------------
	// update data members with values stored in hash table
	//--------------------------------------------------------------------------------

	public void updateMembersFromHashTable() {
		// REVERSE FIELD NAMES VECTOR
		setNivel((String)asFieldNames.get("nivel"));
		setDescripcion((String)asFieldNames.get("descripcion"));
		setDescripcion_en((String)asFieldNames.get("descripcion_en"));
		setLongitud((String)asFieldNames.get("longitud"));

	}

	//--------------------------------------------------------------------------------
	// constructor of the class. it initializes the object variables
	//--------------------------------------------------------------------------------

	// CONSTRUCTOR
	public void init()
	{
		lastError="No errors detected";
		nivel = 0;
		descripcion = "";
		descripcion_en = "";
		longitud = 0;
		updateHashTable();
	}

	public niveles()
	{
		super("niveles object");
		init();
	}
//--------------------------------------------------------------------------------
// getter and setter methods of the elements of the class
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// METHODS FOR: nivel
	public String getNivel()
	{
		return Integer.toString(nivel);
	}

	public void setNivel(String sParameter)
	{
		nivel = extendedParseInt(sParameter);
	}
// end of methods for Nivel
//--------------------------------------------------------------------------------
// METHODS FOR: descripcion
	public String getDescripcion()
	{
		return descripcion;
	}

	public void setDescripcion(String sParameter)
	{
		descripcion = sParameter;
	}
// end of methods for Descripcion
//--------------------------------------------------------------------------------
// METHODS FOR: descripcion_en
	public String getDescripcion_en()
	{
		return descripcion_en;
	}

	public void setDescripcion_en(String sParameter)
	{
		descripcion_en = sParameter;
	}
// end of methods for Descripcion_en
//--------------------------------------------------------------------------------
// METHODS FOR: longitud
	public String getLongitud()
	{
		return Integer.toString(longitud);
	}

	public void setLongitud(String sParameter)
	{
		longitud = extendedParseInt(sParameter);
	}
// end of methods for Longitud

	//----------------------------------------------------------------
	// Operational methods any webObject must have. Abstract class
	// provides templates and default behaviour (return error)
	//----------------------------------------------------------------

	//--------------------------------------------------------------------------------
	// retrieves object info from HTML form fields
	//--------------------------------------------------------------------------------
	public int getForm(HttpServletRequest req, HttpServletResponse resp, Connection con) {

		// GET_FORM()
		nivel = extendedParseInt(req.getParameter(assignName("nivel")));
		descripcion = not_null(req.getParameter(assignName("descripcion")));
		descripcion_en = not_null(req.getParameter(assignName("descripcion_en")));
		longitud = extendedParseInt(req.getParameter(assignName("longitud")));

		updateHashTable();
		return 0;
	}

	/**
	* checks the lengths of strings are <= to what is defined in the database
	*
	*/
	public void checkLengths()
	{
		// CHECK_LENGTHS
		if (descripcion.length()>25)
			descripcion=descripcion.substring(0,25);
		if (descripcion_en.length()>25)
			descripcion_en=descripcion_en.substring(0,25);
	}


	//--------------------------------------------------------------------------------
	// loads an object from a record read from database
	//--------------------------------------------------------------------------------
  public void loadWebObject(ResultSet rset)
    {
		try {
			// SQL_LOAD

			try {
				nivel = rset.getInt("nivel");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field nivel -->";
				System.out.println(ex.toString());
			}

			try {
				descripcion = not_null(rset.getString("descripcion"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field descripcion -->";
				System.out.println(ex.toString());
			}

			try {
				descripcion_en = not_null(rset.getString("descripcion_en"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field descripcion_en -->";
				System.out.println(ex.toString());
			}

			try {
				longitud = rset.getInt("longitud");
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field longitud -->";
				System.out.println(ex.toString());
			}

		} catch (Exception e) {
			lastError = "<!-- Error loading WebObject: " + e.toString() + " : " + sSql + " -->";
		}
		updateHashTable();
	}

	//--------------------------------------------------------------------------------
	// reads an object from the database
	//--------------------------------------------------------------------------------
  public int getWebObject(Connection con)
    {
		try {		
			// SQL_GET
			int f=1;
			sSql = "SELECT nivel,descripcion,descripcion_en,longitud FROM niveles";
			sSql += " WHERE (nivel = ?)";
			pstmt = con.prepareStatement(sSql);

			pstmt.setInt(f++, nivel);			rset = pstmt.executeQuery();
			int nrows = 1;
			if (rset.next())
				loadWebObject(rset);
			else
				nrows = 0;
			// releases the statement object
			rset.close();
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error getting webObject: " + ex.toString() + " : " + sSql
					+ " -->";
		}

		return -1;
	}

	//--------------------------------------------------------------------------------
	// adds a new object to the database
	//--------------------------------------------------------------------------------
  public int addWebObject(Connection con)
    {
		try {
			checkLengths();
			// SQL_INSERT
			int f=1;
			sSql = "insert into niveles (";
			sSql += "nivel, descripcion, descripcion_en, longitud)";
			sSql += "VALUES (?, ?, ?, ?)";
			pstmt = con.prepareStatement(sSql);

			pstmt.setInt(f++, nivel);

			if (descripcion == null || descripcion.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, descripcion);

			if (descripcion_en == null || descripcion_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, descripcion_en);
			pstmt.setInt(f++, longitud);


			int nrows = pstmt.executeUpdate();
			
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			//Trap and report SQL errors
			System.out.println("ERROR (adding web object): "+ex.toString());
			lastError = "<!-- Error adding webObject: " + ex.toString() + " : " + sSql + " -->";
			return -1;
		}
	}

	//--------------------------------------------------------------------------------
	// updates an existing object in the database
	//--------------------------------------------------------------------------------
  public int updateWebObject(Connection con)
    {
		try {
			checkLengths();
			// SQL_UPDATE
			int f=1;
			sSql = "UPDATE niveles SET ";
			sSql += "descripcion = ?";
			sSql += ", descripcion_en = ?";
			sSql += ", longitud = ?";
			sSql += " WHERE (nivel = ?)";
			pstmt = con.prepareStatement(sSql);


			if (descripcion == null || descripcion.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, descripcion);

			if (descripcion_en == null || descripcion_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, descripcion_en);
			pstmt.setInt(f++, longitud);


			pstmt.setInt(f++, nivel);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error updating webObject: " + ex.toString() + " : " + sSql + " -->";
		}

		return -1;
	}

	//-------------------------------------------------------------------------------
	// deletes an existing object in the database
	//--------------------------------------------------------------------------------
	public int deleteWebObject(Connection con) {

		try {
			// SQL_DELETE
			int f=1;
			sSql = "DELETE FROM niveles";
			sSql += " WHERE (nivel = ?)";
			pstmt = con.prepareStatement(sSql);

			pstmt.setInt(f++, nivel);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error deleting webObject: " + ex.toString() + " : " + sSql + " -->";
		}
		return -1;
	}
}

/*    HTML TEMPLATE
<table border=0 cellspacing=0 cellpadding=0>
<tr><td>nivel:</td><td>  <INPUT type='TEXT' size='5' maxlength='11' name='nivel' VALUE="<%=beanName.nivel%>"></td></tr>
<tr><td>descripcion:</td><td>  <INPUT type='TEXT' size='26' maxlength='25' name='descripcion' VALUE="<%=beanName.descripcion%>"></td></tr>
<tr><td>descripcion_en:</td><td>  <INPUT type='TEXT' size='26' maxlength='25' name='descripcion_en' VALUE="<%=beanName.descripcion_en%>"></td></tr>
<tr><td>longitud:</td><td>  <INPUT type='TEXT' size='5' maxlength='6' name='longitud' VALUE="<%=beanName.longitud%>"></td></tr>
</table>
END HTML TEMPLATE */
