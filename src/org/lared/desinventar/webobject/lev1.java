//PACKAGE NAME
package org.lared.desinventar.webobject;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.math.*;
import java.text.*;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.*;

import org.lared.desinventar.util.*;
import org.lared.desinventar.system.*;
import org.lared.desinventar.webobject.*;


//CLASS NAME
// generated by persistentObjectGenerator...
public class lev1 extends webObject
{
    // DATA MEMBERS OF THE CLASS. THEY ARE EXACT MAPPING OF DB. RECORD.
     public   String lev1_cod;
     public   String lev1_name;
     public   String lev1_name_en;
     public   String lev1_lev0;

	//--------------------------------------------------------------------------------
	// creates a hash table with field values of the data members
	//--------------------------------------------------------------------------------

  public void updateHashTable()
  {
		// FIELD NAMES VECTOR
		asFieldNames.put("lev1_cod", lev1_cod);
		asFieldNames.put("lev1_name", lev1_name);
		asFieldNames.put("lev1_name_en", lev1_name_en);
		asFieldNames.put("lev1_lev0", lev1_lev0);

	}

	//--------------------------------------------------------------------------------
	// update data members with values stored in hash table
	//--------------------------------------------------------------------------------

	public void updateMembersFromHashTable() {
		// REVERSE FIELD NAMES VECTOR
		setLev1_cod((String)asFieldNames.get("lev1_cod"));
		setLev1_name((String)asFieldNames.get("lev1_name"));
		setLev1_name_en((String)asFieldNames.get("lev1_name_en"));
		setLev1_lev0((String)asFieldNames.get("lev1_lev0"));

	}

	//--------------------------------------------------------------------------------
	// constructor of the class. it initializes the object variables
	//--------------------------------------------------------------------------------

	// CONSTRUCTOR
	public void init()
	{
		lastError="No errors detected";
		lev1_cod = "";
		lev1_name = "";
		lev1_name_en = "";
		lev1_lev0 = "";
		updateHashTable();
	}

	public lev1()
	{
		super("lev1 object");
		init();
	}
//--------------------------------------------------------------------------------
// getter and setter methods of the elements of the class
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// METHODS FOR: lev1_cod
	public String getLev1_cod()
	{
		return lev1_cod;
	}

	public void setLev1_cod(String sParameter)
	{
		lev1_cod = sParameter;
	}
// end of methods for lev1_cod
//--------------------------------------------------------------------------------
// METHODS FOR: lev1_name
	public String getLev1_name()
	{
		return lev1_name;
	}

	public void setLev1_name(String sParameter)
	{
		lev1_name = sParameter;
	}
// end of methods for lev1_name
//--------------------------------------------------------------------------------
// METHODS FOR: lev1_name_en
	public String getLev1_name_en()
	{
		return lev1_name_en;
	}

	public void setLev1_name_en(String sParameter)
	{
		lev1_name_en = sParameter;
	}
// end of methods for lev1_name_en
//--------------------------------------------------------------------------------
// METHODS FOR: lev1_lev0
	public String getLev1_lev0()
	{
		return lev1_lev0;
	}

	public void setLev1_lev0(String sParameter)
	{
		lev1_lev0 = sParameter;
	}
// end of methods for lev1_lev0

	//----------------------------------------------------------------
	// Operational methods any webObject must have. Abstract class
	// provides templates and default behaviour (return error)
	//----------------------------------------------------------------

	//--------------------------------------------------------------------------------
	// retrieves object info from HTML form fields
	//--------------------------------------------------------------------------------
	public int getForm(HttpServletRequest req, HttpServletResponse resp, Connection con) {

		// GET_FORM()
		lev1_cod = not_null(req.getParameter(assignName("lev1_cod")));
		lev1_name = not_null(req.getParameter(assignName("lev1_name")));
		lev1_name_en = not_null(req.getParameter(assignName("lev1_name_en")));
		lev1_lev0 = not_null(req.getParameter(assignName("lev1_lev0")));

		updateHashTable();
		return 0;
	}

	//--------------------------------------------------------------------------------
	// loads an object from a record read from database
	//--------------------------------------------------------------------------------
  public void loadWebObject(ResultSet rset)
    {
		try {
			// SQL_LOAD

			try {
				lev1_cod = not_null(rset.getString("lev1_cod"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev1_cod -->";
				System.out.println(ex.toString());
			}

			try {
				lev1_name = not_null(rset.getString("lev1_name"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev1_name -->";
				System.out.println(ex.toString());
			}

			try {
				lev1_name_en = not_null(rset.getString("lev1_name_en"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev1_name_en -->";
				System.out.println(ex.toString());
			}

			try {
				lev1_lev0 = not_null(rset.getString("lev1_lev0"));
			} catch (Exception ex) {
				lastError = "<-- error attempting to access field lev1_lev0 -->";
				System.out.println(ex.toString());
			}

		} catch (Exception e) {
			lastError = "<!-- Error loading WebObject: " + e.toString() + " : " + sSql + " -->";
		}
		updateHashTable();
	}

	/**
	* checks the lengths of strings are <= to what is defined in the database
	*
	*/
	public void checkLengths()
	{
		// CHECK_LENGTHS
		if (lev1_cod.length()>15)
			lev1_cod=lev1_cod.substring(0,15);
		if (lev1_name.length()>30)
			lev1_name=lev1_name.substring(0,30);
		if (lev1_name_en.length()>30)
			lev1_name_en=lev1_name_en.substring(0,30);
		if (lev1_lev0.length()>15)
			lev1_lev0=lev1_lev0.substring(0,15);
	}

	//--------------------------------------------------------------------------------
	// reads an object from the database
	//--------------------------------------------------------------------------------
  public int getWebObject(Connection con)
    {
		try {		
			// SQL_GET
			int f=1;
			sSql = "SELECT lev1_cod,lev1_name,lev1_name_en,lev1_lev0 FROM lev1";
			sSql += " WHERE (lev1_cod = ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev1_cod == null || lev1_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_cod);			rset = pstmt.executeQuery();
			int nrows = 1;
			if (rset.next())
				loadWebObject(rset);
			else
				nrows = 0;
			// releases the statement object
			rset.close();
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			//Trap and report SQL errors
			lastError = "<!-- Error getting webObject: " + ex.toString() + " : " + sSql
					+ " -->";
		}

		return -1;
	}

	//--------------------------------------------------------------------------------
	// adds a new object to the database
	//--------------------------------------------------------------------------------
  public int addWebObject(Connection con)
    {
		try {
			checkLengths();
			// SQL_INSERT
			int f=1;
			sSql = "insert into lev1 (";
			sSql += "lev1_cod, lev1_name, lev1_name_en, lev1_lev0)";
			sSql += "VALUES (?, ?, ?, ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev1_cod == null || lev1_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_cod);

			if (lev1_name == null || lev1_name.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_name);

			if (lev1_name_en == null || lev1_name_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_name_en);

			if (lev1_lev0 == null || lev1_lev0.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_lev0);


			int nrows = pstmt.executeUpdate();
			
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			//Trap and report SQL errors
			System.out.println("[DI9] ERROR (adding web object): LEV1 "+ex.toString());
			lastError = "<!-- Error adding webObject: LEV1 " + ex.toString() + " : " + sSql + " -->";
			return -1;
		}
	}

	//--------------------------------------------------------------------------------
	// updates an existing object in the database
	//--------------------------------------------------------------------------------
  public int updateWebObject(Connection con)
    {
		try {
			checkLengths();
			// SQL_UPDATE
			int f=1;
			sSql = "UPDATE lev1 SET ";
			sSql += "lev1_name = ?";
			sSql += ", lev1_name_en = ?";
			sSql += ", lev1_lev0 = ?";
			sSql += " WHERE (lev1_cod = ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev1_name == null || lev1_name.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_name);

			if (lev1_name_en == null || lev1_name_en.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_name_en);

			if (lev1_lev0 == null || lev1_lev0.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_lev0);



			if (lev1_cod == null || lev1_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_cod);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			
			//Trap and report SQL errors
			lastError = "<!-- Error updating webObject: " + ex.toString() + " : " + sSql + " -->";
		}

		return -1;
	}

	//-------------------------------------------------------------------------------
	// deletes an existing object in the database
	//--------------------------------------------------------------------------------
	public int deleteWebObject(Connection con) {

		try {
			// SQL_DELETE
			int f=1;
			sSql = "DELETE FROM lev1";
			sSql += " WHERE (lev1_cod = ?)";
			pstmt = con.prepareStatement(sSql);


			if (lev1_cod == null || lev1_cod.length() == 0)
				pstmt.setNull(f++, Types.VARCHAR);
			else
				pstmt.setString(f++, lev1_cod);


			int nrows = pstmt.executeUpdate();
			// releases the statement object
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
			return nrows;
		} catch (Exception ex) {
			try{
		    	pstmt.close();
		    }
		    catch(Exception e)
		    {
		    	// do nothing for now
		    }
			//Trap and report SQL errors
			lastError = "<!-- Error deleting webObject: " + ex.toString() + " : " + sSql + " -->";
		}
		return -1;
	}
}

/*    HTML TEMPLATE
<table border=0 cellspacing=0 cellpadding=0>
<tr><td>lev1_cod:</td><td>  <INPUT type='TEXT' size='16' maxlength='15' name='lev1_cod' VALUE="<%=beanName.lev1_cod%>"></td></tr>
<tr><td>lev1_name:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='lev1_name' VALUE="<%=beanName.lev1_name%>"></td></tr>
<tr><td>lev1_name_en:</td><td>  <INPUT type='TEXT' size='31' maxlength='30' name='lev1_name_en' VALUE="<%=beanName.lev1_name_en%>"></td></tr>
<tr><td>lev1_lev0:</td><td>  <INPUT type='TEXT' size='16' maxlength='15' name='lev1_lev0' VALUE="<%=beanName.lev1_lev0%>"></td></tr>
</table>
END HTML TEMPLATE */
