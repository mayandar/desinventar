//PACKAGE NAME
package org.lared.desinventar.webobject;

import java.io.*;
import java.util.*;
import java.sql.*;
import java.math.*;
import java.text.*;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.tagext.*;

import com.jspsmart.upload.SmartUpload;


//CLASS NAME
// generated by WebObjectGenerator...
public class MediaFile extends webObject
{
//    public int dbType=Sys.iDatabaseType;	

	// DATA MEMBERS OF THE CLASS. THEY ARE EXACT MAPPING OF DB. RECORD.
	public 	int    imedia;
	public 	int    iclave;
	public 	int    media_type;
	public 	String media_title;
	public 	String media_title_en;
	public 	String media_file;
	public 	String media_description;
	public 	String media_description_en;
	public 	String media_link;

	/**
	* creates a hash table with field values of the data members
	*
	*/

	public void updateHashTable() {
		// FIELD NAMES VECTOR
		asFieldNames.put("imedia", String.valueOf(imedia));
		asFieldNames.put("iclave", String.valueOf(iclave));
		asFieldNames.put("media_type", String.valueOf(media_type));
		asFieldNames.put("media_title", media_title);
		asFieldNames.put("media_title_en", media_title_en);
		asFieldNames.put("media_file", media_file);
		asFieldNames.put("media_description", media_description);
		asFieldNames.put("media_description_en", media_description_en);
		asFieldNames.put("media_link", media_link);

	}

	/**
	* update data members with values stored in hash table
	*
	*/

	public void updateMembersFromHashTable() {
		// REVERSE FIELD NAMES VECTOR
		setImedia((String)asFieldNames.get("imedia"));
		setIclave((String)asFieldNames.get("iclave"));
		setMedia_type((String)asFieldNames.get("media_type"));
		setMedia_title((String)asFieldNames.get("media_title"));
		setMedia_title_en((String)asFieldNames.get("media_title_en"));
		setMedia_file((String)asFieldNames.get("media_file"));
		setMedia_description((String)asFieldNames.get("media_description"));
		setMedia_description_en((String)asFieldNames.get("media_description_en"));
		setMedia_link((String)asFieldNames.get("media_link"));

	}
	/**
	* constructor of the class. it initialises the object variables
	*
	*/

	// CONSTRUCTOR
	public void init() {
		lastError="No errors detected";
		imedia = 0;
		iclave = 0;
		media_type = 0;
		media_title = "";
		media_title_en = "";
		media_file = "";
		media_description = "";
		media_description_en = "";
		media_link = "";
		updateHashTable();
	}

	public MediaFile() {
		super("MediaFile object");
		init();
	}
//--------------------------------------------------------------------------------
// getter and setter methods of the elements of the class
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'imedia'
	public String getImedia() {
		return Integer.toString(imedia);
	}

	public void setImedia(String sParameter) {
		imedia = extendedParseInt(sParameter);
	}

	public void setImedia(int sParameter) {
		imedia = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'iclave'
	public String getIclave() {
		return Integer.toString(iclave);
	}

	public void setIclave(String sParameter) {
		iclave = extendedParseInt(sParameter);
	}

	public void setIclave(int sParameter) {
		iclave = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'media_type'
	public String getMedia_type() {
		return Integer.toString(media_type);
	}

	public void setMedia_type(String sParameter) {
		media_type = extendedParseInt(sParameter);
	}

	public void setMedia_type(int sParameter) {
		media_type = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'media_title'
	public String getMedia_title() {
		return media_title;
	}

	public void setMedia_title(String sParameter) {
		media_title = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'media_title_en'
	public String getMedia_title_en() {
		return media_title_en;
	}

	public void setMedia_title_en(String sParameter) {
		media_title_en = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'media_file'
	public String getMedia_file() {
		return media_file;
	}

	public void setMedia_file(String sParameter) {
		media_file = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'media_description'
	public String getMedia_description() {
		return media_description;
	}

	public void setMedia_description(String sParameter) {
		media_description = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'media_description_en'
	public String getMedia_description_en() {
		return media_description_en;
	}

	public void setMedia_description_en(String sParameter) {
		media_description_en = sParameter;
	}
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Access methods for database field 'media_link'
	public String getMedia_link() {
		return media_link;
	}

	public void setMedia_link(String sParameter) {
		media_link = sParameter;
	}
//--------------------------------------------------------------------------------


	//----------------------------------------------------------------
	// Operational methods any webObject must have. Abstract class
	// provides templates and default behaviour (return error)
	//----------------------------------------------------------------

	/**
	* retrieves object info from HTML form fields
	*
	*/
	public int getForm(HttpServletRequest req, HttpServletResponse resp, Connection con) {

		// GET_FORM()
		setImedia(req.getParameter(assignName("imedia")));
		setIclave(req.getParameter(assignName("iclave")));
		setMedia_type(req.getParameter(assignName("media_type")));
		setMedia_title(not_null(req.getParameter(assignName("media_title"))));
		setMedia_title_en(not_null(req.getParameter(assignName("media_title_en"))));
		setMedia_file(not_null(req.getParameter(assignName("media_file"))));
		setMedia_description(not_null(req.getParameter(assignName("media_description"))));
		setMedia_description_en(not_null(req.getParameter(assignName("media_description_en"))));
		setMedia_link(not_null(req.getParameter(assignName("media_link"))));
		updateHashTable();
		return 0;
	}

	/**
	* retrieves object info from HTML form fields
	*
	*/
	public int getForm(ServletRequest req, ServletResponse resp, Connection con) {

		// GET_FORM()
		setImedia(req.getParameter(assignName("imedia")));
		setIclave(req.getParameter(assignName("iclave")));
		setMedia_type(req.getParameter(assignName("media_type")));
		setMedia_title(not_null(req.getParameter(assignName("media_title"))));
		setMedia_title_en(not_null(req.getParameter(assignName("media_title_en"))));
		setMedia_file(not_null(req.getParameter(assignName("media_file"))));
		setMedia_description(not_null(req.getParameter(assignName("media_description"))));
		setMedia_description_en(not_null(req.getParameter(assignName("media_description_en"))));
		setMedia_link(not_null(req.getParameter(assignName("media_link"))));

		updateHashTable();
		return 0;
	}


	/**
	* loads an object from a record read from database
	*
	*/
	public void loadWebObject(ResultSet rset) {
		try {
			// SQL_LOAD

			try {
				imedia = rset.getInt("imedia");

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field imedia -->";
				System.out.println(ex.toString());
			}

			try {
				iclave = rset.getInt("iclave");

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field iclave -->";
				System.out.println(ex.toString());
			}

			try {
				media_type = rset.getInt("media_type");

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field media_type -->";
				System.out.println(ex.toString());
			}

			try {
				media_title = not_null(rset.getString("media_title"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field media_title -->";
				System.out.println(ex.toString());
			}

			try {
				media_title_en = not_null(rset.getString("media_title_en"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field media_title_en -->";
				System.out.println(ex.toString());
			}

			try {
				media_file = not_null(rset.getString("media_file"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field media_file -->";
				System.out.println(ex.toString());
			}

			try {
				media_description = not_null(rset.getString("media_description"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field media_description -->";
				System.out.println(ex.toString());
			}

			try {
				media_description_en = not_null(rset.getString("media_description_en"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field media_description_en -->";
				System.out.println(ex.toString());
			}

			try {
				media_link = not_null(rset.getString("media_link"));

			} catch (Exception ex) {
				lastError = "<-- error attempting to access field media_link -->";
				System.out.println(ex.toString());
			}

		} catch (Exception e) {
			lastError = "<!-- Error loading WebObject: " + e.toString() + " : " + sSql + " -->";
		}
		updateHashTable();
	}

	/**
	* reads an object from the database
	*
	*/
	public int getWebObject(Connection con) 
	{
		int nrows = 0;
		try {		
			// SQL_GET
			int f=1;
			sSql = "SELECT * FROM media_file";
			sSql += " WHERE (imedia = ?)";
			pstmt = con.prepareStatement(sSql);

				pstmt.setInt(f++, imedia);			rset = pstmt.executeQuery();
			if (rset.next()) {
				loadWebObject(rset);
				nrows = 1;				
			}			
			// releases the statement object
			rset.close();
			pstmt.close();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error getting webObject: " + ex.toString() + " : " + sSql	+ " -->";
			nrows = -1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}

		return nrows;
	}



	/**
	* checks the lengths of strings are <= to what is defined in the database
	*
	*/
	public void checkLengths()
    {
		// CHECK_LENGTHS
		if (media_title.length()>50)
			media_title=media_title.substring(0,50);
		if (media_title_en.length()>50)
			media_title_en=media_title_en.substring(0,50);
		if (media_file.length()>50)
			media_file=media_file.substring(0,50);
		if (media_description.length()>255)
			media_description=media_description.substring(0,255);
		if (media_description_en.length()>255)
			media_description_en=media_description_en.substring(0,255);
		if (media_link.length()>255)
			media_link=media_link.substring(0,255);
    }

	/**
	* adds a new object to the database
	*
	*/
	public int addWebObject(Connection con)
    {
		int nrows = 0;
		try {
			// SQL_INSERT
			int f=1;
			sSql = "insert into media_file (";
			sSql += "imedia, iclave, media_type, media_title, media_title_en, media_file";
			sSql += ", media_description, media_description_en, media_link)";
			sSql += "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
			pstmt = con.prepareStatement(sSql);

				pstmt.setInt(f++, imedia);
				pstmt.setInt(f++, iclave);
				pstmt.setInt(f++, media_type);
			if (media_title==null || media_title.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, media_title);
			if (media_title_en==null || media_title_en.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, media_title_en);
			if (media_file==null || media_file.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, media_file);
			if (media_description==null || media_description.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, media_description);
			if (media_description_en==null || media_description_en.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, media_description_en);
			if (media_link==null || media_link.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else
				pstmt.setString(f++, media_link);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			System.out.println("ERROR (adding web object): "+ex.toString());
			lastError = "<!-- Error adding webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}

  	/**
  	* updates an existing object in the database
  	*
  	*/
  	public int updateWebObject(Connection con)
    {
		int nrows = 0;
		try {
			// SQL_UPDATE
			int f=1;
			sSql = "UPDATE media_file SET ";
			sSql += "iclave = ?";
			sSql += ", media_type = ?";
			sSql += ", media_title = ?";
			sSql += ", media_title_en = ?";
			sSql += ", media_file = ?";
			sSql += ", media_description = ?";
			sSql += ", media_description_en = ?";
			sSql += ", media_link = ?";
			sSql += " WHERE (imedia = ?)";
			pstmt = con.prepareStatement(sSql);

				pstmt.setInt(f++, iclave);
				pstmt.setInt(f++, media_type);
			if (media_title==null || media_title.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else 
				pstmt.setString(f++, media_title);
			if (media_title_en==null || media_title_en.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else 
				pstmt.setString(f++, media_title_en);
			if (media_file==null || media_file.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else 
				pstmt.setString(f++, media_file);
			if (media_description==null || media_description.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else 
				pstmt.setString(f++, media_description);
			if (media_description_en==null || media_description_en.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else 
				pstmt.setString(f++, media_description_en);
			if (media_link==null || media_link.length()==0)
				pstmt.setNull(f++, java.sql.Types.VARCHAR);
			else 
				pstmt.setString(f++, media_link);


				pstmt.setInt(f++, imedia);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error updating webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}

	/**
	* deletes an existing object in the database
	*
	*/
	public int deleteWebObject(Connection con) 
	{
		int nrows = 0;
		try {
			// SQL_DELETE
			int f=1;
			sSql = "DELETE FROM media_file";
			sSql += " WHERE (imedia = ?)";
			pstmt = con.prepareStatement(sSql);

				pstmt.setInt(f++, imedia);


			nrows = pstmt.executeUpdate();
			lastError = ""; // "NO ERROR. sql="+sSql;
		} catch (Exception ex) {
			//Trap and report SQL errors
			lastError = "<!-- Error deleting webObject: " + ex.toString() + " : " + sSql + " -->";
			nrows=-1;
		}
		finally {
			// releases the statement object
			try { pstmt.close(); } catch (Exception ignrd) {}
		}
		return nrows;		
	}
}

/*    HTML TEMPLATE
<table border=0 cellspacing=0 cellpadding=0>
<tr><td>imedia:</td><td>  <INPUT type='TEXT' size='5' maxlength='11' name='imedia' VALUE="<%=beanName.imedia%>"></td></tr>
<tr><td>iclave:</td><td>  <INPUT type='TEXT' size='5' maxlength='11' name='iclave' VALUE="<%=beanName.iclave%>"></td></tr>
<tr><td>media_type:</td><td>  <INPUT type='TEXT' size='5' maxlength='11' name='media_type' VALUE="<%=beanName.media_type%>"></td></tr>
<tr><td>media_title:</td><td>  <INPUT type='TEXT' size='50' maxlength='50' name='media_title' VALUE="<%=beanName.media_title%>"></td></tr>
<tr><td>media_title_en:</td><td>  <INPUT type='TEXT' size='50' maxlength='50' name='media_title_en' VALUE="<%=beanName.media_title_en%>"></td></tr>
<tr><td>media_file:</td><td>  <INPUT type='TEXT' size='50' maxlength='50' name='media_file' VALUE="<%=beanName.media_file%>"></td></tr>
<tr><td>media_description:</td><td>  <INPUT type='TEXT' size='50' maxlength='255' name='media_description' VALUE="<%=beanName.media_description%>"></td></tr>
<tr><td>media_description_en:</td><td>  <INPUT type='TEXT' size='50' maxlength='255' name='media_description_en' VALUE="<%=beanName.media_description_en%>"></td></tr>
<tr><td>media_link:</td><td>  <INPUT type='TEXT' size='50' maxlength='255' name='media_link' VALUE="<%=beanName.media_link%>"></td></tr>
</table>
END HTML TEMPLATE */
